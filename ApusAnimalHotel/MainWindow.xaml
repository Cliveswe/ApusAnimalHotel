<Window x:Name="window" x:Class="ApusAnimalHotel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:VM="clr-namespace:ApusAnimalHotel.ViewModel"
        mc:Ignorable="d"
        Title="{Binding WindowTitle, Mode=OneWay}"
        WindowStartupLocation="CenterScreen" 
        Height="800" Width="1080" ResizeMode="NoResize">
    <Window.DataContext>
        <VM:UIMainWindowIO></VM:UIMainWindowIO>
    </Window.DataContext>
    <Window.InputBindings>
        <!-- Key bindings for main window menu File and menu items! -->
        <KeyBinding x:Name="KeyIOAlt_F" Modifiers="Alt" Key="F" Command="{Binding ElementName=MenuFileNewMI}"/>

        <!-- Exit -->
        <KeyBinding x:Name="KeyIOAlt_E" Key="F4" Modifiers="Alt" Command="{Binding Command, ElementName=MenuFileExitMI}" 
                    CommandParameter="{Binding ElementName=window, Mode=OneWay}"/>

        <KeyBinding x:Name="KeyIOCtrl_N" Key="N" Modifiers="Ctrl" Command="{Binding ElementName=MenuFileNewMI, Path=Command}"/>
    </Window.InputBindings>
    <Window.Resources>
        <!--Error Template to change the default behaviour-->
        <ControlTemplate x:Key="ErrorTemplate">
            <DockPanel LastChildFill="True">
                <Border BorderBrush="Red" BorderThickness="1">
                    <AdornedElementPlaceholder />
                </Border>
            </DockPanel>
        </ControlTemplate>
        <!--To display tooltip with the error-->
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="0"  RenderTransformOrigin="0.502,0.432" Focusable="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="790*"/>
            <ColumnDefinition Width="275*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="33*"/>
            <RowDefinition Height="338*"/>
            <RowDefinition Height="400*"/>
        </Grid.RowDefinitions>
        <Border Grid.ColumnSpan="2" Margin="2,2,2,0" Padding="1" BorderBrush="#FF040404"  VerticalAlignment="Top" BorderThickness="1" Height="28">
            <!-- Main window menu -->
            <Menu Margin="5,2" Background="White" AllowDrop="True" >
                <!-- Menu item File -->
                <MenuItem Padding="4,0" Margin="1" Header="{Binding Menu.MenuFile.MenuFileHeader, Mode=OneWay}" HorizontalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <!-- Menu items related to File -->
                    <MenuItem Header="{Binding Menu.MenuFile.MenuFileNew.MenuItemContent}" Command="{Binding Menu.MenuFile.MenuFileNew.MenuItemCommand}" CommandParameter="{Binding ElementName=window, Mode=OneWay}" ToolTip="{Binding Menu.MenuFile.MenuFileNew.Tooltip}"></MenuItem>
                    <MenuItem Header="{Binding Menu.MenuFile.MenuFileOpenHeader, Mode=OneWay}">
                        <MenuItem x:Name="menuItem1" Header="{Binding Menu.MenuFile.MenuFileTextOpenAs.MenuItemContent}" Command="{Binding Menu.MenuFile.MenuFileTextOpenAs.MenuItemCommand}" ToolTip="{Binding Menu.MenuFile.MenuFileTextOpenAs.Tooltip}" CommandParameter="{Binding Header, ElementName=menuItem1}"></MenuItem>
                        <MenuItem x:Name="menuItem" Header="{Binding Menu.MenuFile.MenuFileBinaryOpenAs.MenuItemContent}" ToolTip="{Binding Menu.MenuFile.MenuFileBinaryOpenAs.Tooltip}" Command="{Binding Menu.MenuFile.MenuFileBinaryOpenAs.MenuItemCommand}" CommandParameter="{Binding Header, ElementName=menuItem}"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="{Binding Menu.MenuFile.MenuFileSaveHeader, Mode=OneWay}">
                        <MenuItem x:Name="SaveTextFile" Header="{Binding Menu.MenuFile.MenuFileTextSave.MenuItemContent}" ToolTip="{Binding Menu.MenuFile.MenuFileTextSave.Tooltip}" Command="{Binding Menu.MenuFile.MenuFileTextSave.MenuItemCommand}" CommandParameter="{Binding Header, ElementName=SaveTextFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></MenuItem>
                        <MenuItem x:Name="SaveBinaryFile" Header="{Binding Menu.MenuFile.MenuFileBinarySave.MenuItemContent}" Command="{Binding Menu.MenuFile.MenuFileBinarySave.MenuItemCommand}" ToolTip="{Binding Menu.MenuFile.MenuFileBinarySave.Tooltip}" CommandParameter="{Binding Header, ElementName=SaveBinaryFile}"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="{Binding Menu.MenuFile.MenuFileSaveAsHeader, Mode=OneWay}">
                        <MenuItem x:Name="SaveAsTextFile" Header="{Binding Menu.MenuFile.MenuFileTextSaveAs.MenuItemContent}" ToolTip="{Binding Menu.MenuFile.MenuFileTextSaveAs.Tooltip}" Command="{Binding Menu.MenuFile.MenuFileTextSaveAs.MenuItemCommand}" CommandParameter="{Binding Header, ElementName=SaveAsTextFile}"></MenuItem>
                        <MenuItem x:Name="SaveAsBinaryFile" Header="{Binding Menu.MenuFile.MenuFileBinarySaveAs.MenuItemContent}" Command="{Binding Menu.MenuFile.MenuFileBinarySaveAs.MenuItemCommand}" ToolTip="{Binding Menu.MenuFile.MenuFileBinarySaveAs.Tooltip}" CommandParameter="{Binding Header, ElementName=SaveAsBinaryFile}"></MenuItem>
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem Header="{Binding Menu.MenuFile.MenuExportToXMLHeader, Mode=OneWay}">
                        <MenuItem x:Name="menuItem2" Header="{Binding Menu.MenuFile.XMLExportTo.MenuItemContent}" ToolTip="{Binding Menu.MenuFile.XMLExportTo.Tooltip}" Command="{Binding Menu.MenuFile.XMLExportTo.MenuItemCommand}" CommandParameter="{Binding Header, ElementName=menuItem2}"></MenuItem>
                        <MenuItem Header="{Binding Menu.MenuFile.XMLImportFrom.MenuItemContent}" Command="{Binding Menu.MenuFile.XMLImportFrom.MenuItemCommand}" CommandParameter="{Binding Menu.MenuFile.XMLImportFrom.MenuItemContent}" ToolTip="{Binding Menu.MenuFile.XMLImportFrom.Tooltip}"></MenuItem>
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem x:Name="MenuFileExitMI" Header="{Binding Menu.MenuFile.MenuFileExit.MenuItemContent}" Command="{Binding Menu.MenuFile.MenuFileExit.MenuItemCommand}" CommandParameter="{Binding ElementName=window, Mode=OneWay}" ToolTip="{Binding Menu.MenuFile.MenuFileExit.Tooltip}"></MenuItem>
                </MenuItem>
            </Menu>
        </Border>
        <Grid Margin="2,2,2,0" Grid.ColumnSpan="1" Height="312" VerticalAlignment="Top" ShowGridLines="True" Grid.Row="1">

            <GroupBox Header="{Binding AnimalSpecifications.AnimalSpecificationsBlockHeader, Mode=OneWay}" Margin="2,2,2,0" HorizontalAlignment="Left">
                <Grid Margin="2" HorizontalAlignment="Left">
                    <Label HorizontalAlignment="Left" Margin="2,5,0,0" VerticalAlignment="Top" Content="{Binding AnimalSpecifications.NameOfAnimalUI.AnimalName.Label}"/>
                    <Label Content="{Binding AnimalSpecifications.AgeOfAnimalUI.AnimalAge.Label}" HorizontalAlignment="Left" Margin="2,35,0,0" VerticalAlignment="Top" RenderTransformOrigin="1.535,3.526"/>
                    <TextBox x:Name="animalNameTB" HorizontalAlignment="Left" Height="26" Margin="49,5,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="172" Text="{Binding AnimalSpecifications.NameOfAnimalUI.AnimalName.TextIO, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Padding="1,0,0,0" VerticalContentAlignment="Center" TabIndex="1" 
                             Validation.ErrorTemplate="{StaticResource ErrorTemplate}">
                    </TextBox>
                    <TextBox x:Name="animalAgeTB" HorizontalAlignment="Left" Height="26" Margin="49,35,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="60" RenderTransformOrigin="0.961,1.115" Text="{Binding AnimalSpecifications.AgeOfAnimalUI.AnimalAge.TextIO, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Padding="1,0,0,0" VerticalContentAlignment="Center" TabIndex="2"
                             Validation.ErrorTemplate="{StaticResource ErrorTemplate}">
                    </TextBox>
                    <GroupBox HorizontalAlignment="Left" Margin="2,70,0,0" VerticalAlignment="Top" Height="103" Width="219" Header="{Binding AnimalSpecifications.Gender.GroupListBoxHeader}">
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40*"/>
                                <ColumnDefinition Width="167*"/>
                            </Grid.ColumnDefinitions>
                            <ListBox x:Name="genderListBox" Margin="1" BorderThickness="0" IsSynchronizedWithCurrentItem="False" Grid.ColumnSpan="2" TabIndex="3" ItemsSource="{Binding AnimalSpecifications.Gender.Contents}" SelectedIndex="{Binding AnimalSpecifications.Gender.IsSelected, Mode=TwoWay}"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox HorizontalAlignment="Left" Margin="2,0,0,10" VerticalAlignment="Bottom" Height="84" Width="376" Header="{Binding AnimalSpecifications.Specifications.SpecificationsHeader.TextIO, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="14*"/>
                                <ColumnDefinition Width="53*"/>
                                <ColumnDefinition Width="27*"/>
                                <ColumnDefinition Width="270*"/>
                            </Grid.ColumnDefinitions>
                            <Label HorizontalAlignment="Left" Margin="0,2,0,0" VerticalAlignment="Top" Height="26" Width="148" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Grid.ColumnSpan="4" Content="{Binding AnimalSpecifications.Specifications.SpecificationsForCategory.Label}"/>
                            <TextBox HorizontalAlignment="Left" Height="26" Margin="68,2,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="192" TabIndex="6" VerticalContentAlignment="Center" Grid.Column="3"
                                     Validation.ErrorTemplate="{StaticResource ErrorTemplate}" Text="{Binding AnimalSpecifications.Specifications.SpecificationsForCategory.TextIO, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                            <Label HorizontalAlignment="Left" VerticalAlignment="Top" Width="148" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Height="26" Grid.ColumnSpan="4" Margin="0,34,0,0" Content="{Binding AnimalSpecifications.Specifications.SpecificationsForAnimalObject.Label}"/>
                            <TextBox HorizontalAlignment="Left" Height="26" Margin="68,34,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="192" VerticalContentAlignment="Center" Padding="1,0,0,0" TabIndex="7" Grid.Column="3"  Validation.ErrorTemplate="{StaticResource ErrorTemplate}" Text="{Binding AnimalSpecifications.Specifications.SpecificationsForAnimalObject.TextIO, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        </Grid>
                    </GroupBox>
                    <GroupBox HorizontalAlignment="Left" Margin="260,2,0,0" VerticalAlignment="Top" Height="171" Width="118" Header="{Binding AnimalSpecifications.Categories.GroupListBoxHeader}">
                        <Grid Margin="0">

                            <ListBox x:Name="categoryListBox" Grid.ColumnSpan="2" Margin="1,2,1,1" BorderThickness="0" TabIndex="4" ItemsSource="{Binding AnimalSpecifications.Categories.Contents}" SelectedIndex="{Binding AnimalSpecifications.Categories.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AnimalSpecifications.Categories.IsEnabled, Mode=TwoWay}"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox HorizontalAlignment="Left" Height="221" Margin="410,2,0,0" VerticalAlignment="Top" Width="148" Header="{Binding AnimalSpecifications.AnimalSpecies.GroupListBoxHeader}" Padding="0">
                        <Grid Margin="0,2,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="23*"/>
                                <ColumnDefinition Width="45*"/>
                            </Grid.ColumnDefinitions>
                            <ListBox x:Name="animalObjectListBox" Margin="0,2,0,8" BorderThickness="0" TabIndex="5" Grid.ColumnSpan="2" ItemsSource="{Binding AnimalSpecifications.AnimalSpecies.Contents, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding AnimalSpecifications.AnimalSpecies.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </GroupBox>
                    <Button x:Name="addNewAnimalBT" HorizontalAlignment="Left" Margin="410,0,0,10" VerticalAlignment="Bottom" Height="36" Width="148" RenderTransformOrigin="0.896,0.5" TabIndex="8" Content="{Binding AnimalSpecifications.AddNewAnimal.ButtonContent}" IsEnabled="{Binding AnimalSpecifications.AddNewAnimal.IsEnabled}" Command="{Binding AnimalSpecifications.AddNewAnimal.ButtonCommand}"/>
                    <CheckBox x:Name="animalSpecsCheckBox" HorizontalAlignment="Left" Margin="588,208,0,0" VerticalAlignment="Top" TabIndex="9" Content="{Binding AnimalSpecifications.ListAnimals.CheckBoxContent, Mode=OneWay}" Command="{Binding AnimalSpecifications.ListAnimals.CheckBoxCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" IsChecked="{Binding AnimalSpecifications.ListAnimals.IsChecked}" />
                    <Grid HorizontalAlignment="Left" Height="171" Margin="588,2,0,0" VerticalAlignment="Top" Width="176">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Padding="0" BorderThickness="1" Grid.Row="0 " BorderBrush="#FF263B9E" Margin="2">
                            <Button Margin="0" VerticalAlignment="Top" BorderBrush="#FF263B9E" Padding="1" TabIndex="10" Command="{Binding AnimalSpecifications.AnimalImage.ImageButton.ButtonCommand}" Content="{Binding AnimalSpecifications.AnimalImage.ImageButton.ButtonContent}"/>
                        </Border>
                        <Border Padding="0" BorderThickness="1" Grid.Row="1" BorderBrush="Gray" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Image Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" Source="{Binding AnimalSpecifications.AnimalImage.ImageButton.ShowImageFile, Mode=OneWay}"/>
                        </Border>
                    </Grid>

                </Grid>
            </GroupBox>
        </Grid>
        <Grid Margin="2" Grid.Row="2" Grid.ColumnSpan="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <GroupBox Margin="2" Grid.ColumnSpan="2" Header="{Binding ListAnimalObjectsInDetail.Header, Mode=OneWay}" Grid.RowSpan="2" Padding="0">
                <Grid x:Name="btDelete" Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ListView x:Name="listOfRegisteredAnimalsLV" Margin="2,2,2,55" TabIndex="11" ItemsSource="{Binding ListAnimalObjectsInDetail.RegisteredAnimals}" SelectedIndex="{Binding ListAnimalObjectsInDetail.IsSelected}" IsTabStop="True" Grid.RowSpan="2">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn x:Name="AnimalID"  Width="120" Header="{Binding ListAnimalObjectsInDetail.IDTag, Mode=OneWay}" DisplayMemberBinding="{Binding ID, Mode=OneWay}"  />
                                <GridViewColumn x:Name="AnimalName" Width="120" DisplayMemberBinding="{Binding Name, Mode=OneWay}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="{Binding ListAnimalObjectsInDetail.NameTag, Mode=OneWay}" Content="{Binding ListAnimalObjectsInDetail.NameTag, Mode=OneWay}" Command="{Binding ListAnimalObjectsInDetail.SortByNameCommand}"></GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn x:Name="AnimalAge" Width="50" DisplayMemberBinding="{Binding Age, Mode=OneWay}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Command="{Binding ListAnimalObjectsInDetail.SortByAgeCommand}" Content="{Binding ListAnimalObjectsInDetail.AgeTag, Mode=OneWay}" Tag="{Binding ListAnimalObjectsInDetail.AgeTag, Mode=OneWay}"></GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn x:Name="AnimalGender" Width="70" DisplayMemberBinding="{Binding Gender, Mode=OneWay}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Command="{Binding ListAnimalObjectsInDetail.SortByGenderCommand}" Content="{Binding ListAnimalObjectsInDetail.GenderTag, Mode=OneWay}" Tag="{Binding ListAnimalObjectsInDetail.GenderTag, Mode=OneWay}" ></GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn x:Name="AnimalSpecialCharacteristics" Width="370" Header="{Binding ListAnimalObjectsInDetail.SpecialCharacteristicsTag, Mode=OneWay}" DisplayMemberBinding="{Binding SpecialCharacteristics, Mode=OneWay}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Button x:Name="btDelete1" Margin="68,0,0,10" Grid.Row="1" Width="148" Height="36" VerticalAlignment="Bottom" HorizontalAlignment="Left" Content="{Binding DeleteAnimal.ButtonContent}" Command="{Binding DeleteAnimal.ButtonCommand}" IsEnabled="{Binding DeleteAnimal.IsEnabled}"/>
                </Grid>

            </GroupBox>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="2" VerticalAlignment="Top" Margin="2,2,10,0" Height="323">
            <GroupBox Margin="2" Header="{Binding FeedingScheduel.FeedingScheduleHeader, Mode=OneWay}" IsEnabled="{Binding FeedingScheduel.IsEnabled}" >
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15*"/>
                        <ColumnDefinition Width="103*"/>
                    </Grid.ColumnDefinitions>
                    <Label HorizontalAlignment="Left" Margin="2,5,0,0" VerticalAlignment="Top" Content="{Binding FeedingScheduel.DietTypeHeader.Label}" Grid.ColumnSpan="2"/>
                    <TextBox HorizontalAlignment="Left" Height="26" Margin="36.746,5,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="165" Padding="1,0,0,0" VerticalContentAlignment="Center" IsEnabled="False" Text="{Binding FeedingScheduel.FeedingSchedule.DietType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>
                    <ListBox Margin="2,40,4,0" VerticalContentAlignment="Top" IsEnabled="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding FeedingScheduel.FeedingSchedule.FoodScheduleDetailList}" Grid.ColumnSpan="2">
                        <!-- To wrap text in the ListBox add a TextBlock as an itemTemplate-->
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextWrapping="Wrap"></TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="1" VerticalAlignment="Top" Margin="2,2,10,0" Height="323">
            <GroupBox Margin="2" Header="{Binding FoodDetails.FoodDetailsHeader, Mode=OneWay}" >
                <Grid Margin="1">
                    <ListView x:Name="foodDetailsLV" ItemsSource="{Binding FoodDetails.FoodDetails.FoodDetailsAsList}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <!-- Add a wrapper to the content of the listview-->
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=.}" TextWrapping="Wrap"></TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <!-- <ListBox x:Name="foodDetailsLB" Margin="2,2,2,51" VerticalContentAlignment="Top"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding FoodDetails.FoodDetails.FoodDetailsAsList}">-->
                    <!-- To wrap text in the ListBox add a TextBlock as an itemTemplate-->
                    <!--<ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextWrapping="Wrap"></TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>-->
                    <Button Content="{Binding FoodDetails.AddFoodButton.ButtonContent}" HorizontalAlignment="Left" Margin="10,251,0,0" Width="75" Command="{Binding FoodDetails.AddFoodButton.ButtonCommand}" Height="34" VerticalAlignment="Top" Padding="1" VerticalContentAlignment="Center" CommandParameter="{Binding SelectedIndex, ElementName=foodDetailsLV}"/>
                    <Button Content="{Binding FoodDetails.AddStaffButton.ButtonContent}" HorizontalAlignment="right" Margin="0,251,10,0" Width="75" Command="{Binding FoodDetails.AddStaffButton.ButtonCommand}" Height="34" VerticalAlignment="Top" Padding="1" VerticalContentAlignment="Center" />
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>

</Window>
