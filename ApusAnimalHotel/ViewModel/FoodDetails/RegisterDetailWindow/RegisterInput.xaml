<Window x:Name="ingredientsWindow" x:Class="ApusAnimalHotel.ViewModel.FoodDetails.FoodDetailsWindow.RegisterInput"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ApusAnimalHotel.ViewModel.FoodDetails.RegisterDetailWindow"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        WindowStartupLocation="CenterScreen"
        Height="600" Width="500" FocusManager.FocusedElement="{Binding ElementName=nameTb, Mode=OneWay}">
    <Window.DataContext>
        <local:RegisterHeader></local:RegisterHeader>
    </Window.DataContext>
    <Window.Resources>
        <!--Error Template to change the default behaviour-->
        <ControlTemplate x:Key="ErrorTemplate">
            <DockPanel LastChildFill="True">
                <Border BorderBrush="Red" BorderThickness="1">
                    <AdornedElementPlaceholder />
                </Border>
            </DockPanel>
        </ControlTemplate>
        <!--To display tooltip with the error-->
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="2">
        <Grid.RowDefinitions>
            <RowDefinition Height="64*"/>
            <RowDefinition Height="421*"/>
            <RowDefinition Height="80*"/>
        </Grid.RowDefinitions>
        <Grid Margin="2">
            <Label Content="{Binding TitleName.Label}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="36" Width="85" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,10,0,0" />
            <TextBox x:Name="nameTb" HorizontalAlignment="Left" Height="36" Margin="100,10,0,0" TextWrapping="Wrap" Text="{Binding TitleName.TextIO, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Width="346" VerticalContentAlignment="Center" IsEnabled="{Binding TitleIsActive}" TabIndex="0"/>
        </Grid>
        <Grid Grid.Row="1" Margin="2">
            <GroupBox Header="{Binding GroupTitle}" Margin="20,2" Padding="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55*"/>
                        <RowDefinition Height="343*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Label Content="{Binding GroupTitleInputName.Label}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="36" Width="85" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,10,0,0" />
                        <TextBox HorizontalAlignment="Left" Height="36" Margin="100,10,0,0" TextWrapping="Wrap" Text="{Binding GroupTitleInputName.TextIO, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Width="318" VerticalContentAlignment="Center" TabIndex="1"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="59*"/>
                                <ColumnDefinition Width="85*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Button Width="155" Height="36" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,61,0,0" Content="{Binding Add, Mode=OneWay}" Command="{Binding AddCommand}" TabIndex="2"/>
                                <Button Width="155" Height="36" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,115,0,0" Content="{Binding Change, Mode=OneWay}" Command="{Binding ChangeCommand}" TabIndex="4" ></Button>
                                <Button Width="155" Height="36" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,172,0,0" Content="{Binding Delete, Mode=OneWay}" Command="{Binding DeleteCommand}" TabIndex="5"></Button>
                            </Grid>
                            <Grid Grid.Column="1" Margin="0,0,0,0">
                                <ListView x:Name="foodDetailsLV" ItemsSource="{Binding RegisterDetailsAsList, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedIndex="{Binding ItemSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="3">
                                    <!-- Add a wrapper to the content of the listview-->
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=.}" TextWrapping="Wrap"></TextBlock>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <!--<ListBox Margin="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding RegisterDetailsAsList, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">-->
                                <!-- To wrap text in the ListBox add a TextBlock as an itemTemplate-->
                                <!--<ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" TextWrapping="Wrap"></TextBlock>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>-->
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="2" Margin="2">
            <!-- N.B. It is imperative that the Button CommandParameter is bound to the ElementName of this XAML window. 
            If not then the ViewModel cannot access the window elements. -->
            <Button Width="155"  Margin="61,14,268,26" Content="{Binding Ok, Mode=OneWay}" Height="36" CommandParameter="{Binding ElementName=ingredientsWindow, Mode=OneWay}" Command="{Binding OKCommand}" TabIndex="6"/>
            <Button Margin="268,14,61,26" Content="{Binding Cancel, Mode=OneWay}"  Height="36" Width="155" Command="{Binding CancelCommand}" CommandParameter="{Binding ElementName=ingredientsWindow, Mode=OneWay}" TabIndex="7"/>
        </Grid>
    </Grid>
</Window>
